/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/routes/__root'
import { Route as IndexRouteImport } from './app/routes/index'
import { Route as NotebooksNotebookIdRouteRouteImport } from './app/routes/notebooks/$notebookId/route'
import { Route as NotebooksNotebookIdNotesNoteIdRouteImport } from './app/routes/notebooks/$notebookId/notes/$noteId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const NotebooksNotebookIdRouteRoute =
  NotebooksNotebookIdRouteRouteImport.update({
    id: '/notebooks/$notebookId',
    path: '/notebooks/$notebookId',
    getParentRoute: () => rootRouteImport,
  } as any)
const NotebooksNotebookIdNotesNoteIdRoute =
  NotebooksNotebookIdNotesNoteIdRouteImport.update({
    id: '/notes/$noteId',
    path: '/notes/$noteId',
    getParentRoute: () => NotebooksNotebookIdRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/notebooks/$notebookId': typeof NotebooksNotebookIdRouteRouteWithChildren
  '/notebooks/$notebookId/notes/$noteId': typeof NotebooksNotebookIdNotesNoteIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/notebooks/$notebookId': typeof NotebooksNotebookIdRouteRouteWithChildren
  '/notebooks/$notebookId/notes/$noteId': typeof NotebooksNotebookIdNotesNoteIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/notebooks/$notebookId': typeof NotebooksNotebookIdRouteRouteWithChildren
  '/notebooks/$notebookId/notes/$noteId': typeof NotebooksNotebookIdNotesNoteIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/notebooks/$notebookId'
    | '/notebooks/$notebookId/notes/$noteId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/notebooks/$notebookId' | '/notebooks/$notebookId/notes/$noteId'
  id:
    | '__root__'
    | '/'
    | '/notebooks/$notebookId'
    | '/notebooks/$notebookId/notes/$noteId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NotebooksNotebookIdRouteRoute: typeof NotebooksNotebookIdRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notebooks/$notebookId': {
      id: '/notebooks/$notebookId'
      path: '/notebooks/$notebookId'
      fullPath: '/notebooks/$notebookId'
      preLoaderRoute: typeof NotebooksNotebookIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notebooks/$notebookId/notes/$noteId': {
      id: '/notebooks/$notebookId/notes/$noteId'
      path: '/notes/$noteId'
      fullPath: '/notebooks/$notebookId/notes/$noteId'
      preLoaderRoute: typeof NotebooksNotebookIdNotesNoteIdRouteImport
      parentRoute: typeof NotebooksNotebookIdRouteRoute
    }
  }
}

interface NotebooksNotebookIdRouteRouteChildren {
  NotebooksNotebookIdNotesNoteIdRoute: typeof NotebooksNotebookIdNotesNoteIdRoute
}

const NotebooksNotebookIdRouteRouteChildren: NotebooksNotebookIdRouteRouteChildren =
  {
    NotebooksNotebookIdNotesNoteIdRoute: NotebooksNotebookIdNotesNoteIdRoute,
  }

const NotebooksNotebookIdRouteRouteWithChildren =
  NotebooksNotebookIdRouteRoute._addFileChildren(
    NotebooksNotebookIdRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NotebooksNotebookIdRouteRoute: NotebooksNotebookIdRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
